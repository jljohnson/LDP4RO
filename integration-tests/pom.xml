<?xml version="1.0"?>

<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.ldp4j.apps.ldp4ro</groupId>
        <artifactId>ldp4ro-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
	</parent>
    
    <artifactId>ldp4ro-it</artifactId> 

	<name>LDP4RO :: Integration Tests</name>
	<description>An integration tests for LDP4RO platform</description>
	
	<dependencies>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>apache-jena-libs</artifactId>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<systemProperties>
						<systemProperty>
							<name>a</name>
							<value>${project.baseUri}/data</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<!-- Compile the JSPs so that syntax errors are detected during the build. -->
				<groupId>org.codehaus.mojo.jspc</groupId>
				<artifactId>jspc-maven-plugin</artifactId>
				<version>2.0-alpha-3</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includeInProject>false</includeInProject>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.mojo.jspc</groupId>
						<artifactId>jspc-compiler-tomcat6</artifactId>
						<version>2.0-alpha-3</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<!-- We only want to validate the JSPs, but not to include the compiled
                             versions in the project. However, the includeInProject parameter of
                             the jspc-maven-plugin seems to be broken (the classes are always
                             compiled to the target/classes folder) and maven-war-plugin doesn't
                             have an option to exclude specific classes or packages. Therefore
                             the only way to achieve this is to delete the files after compilation. -->
						<phase>process-classes</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<delete dir="${project.build.outputDirectory}/jsp" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>
